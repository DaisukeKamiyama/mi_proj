,＝＝＝＝＝＝＝＝＝＝キーワードcsvファイル＝＝＝＝＝＝＝＝＝＝
,CSVの記法は下記の通りです。（RFC4180に従っています）
,1.列をカンマで区切る
,2.行は改行で区切る
,3.セル内に改行やダブルクオーテーションを入れたい場合はセルを""で囲む
,4.ダブルクオーテーションは""と記述する（1つのダブルクオーテーションに対し、2つのダブルクオーテーションを記述する）
,上記ルールに従えば、Excel等でも編集できます。（Excelの場合は、テキストエンコーディングをShift_JISにする必要があるかもしれません。）
,テキストエンコーディングは自動認識しますが、一行目に下記の一文を入れると確実に認識できます。
,""charset=（テキストエンコーディング名）""
,＝＝＝＝＝＝＝＝＝＝カラムの説明＝＝＝＝＝＝＝＝＝＝
,カラム1:キーワード
,カラム2:キーワード説明
,カラム3:型名
,カラム4:親キーワード
,カラム5:キーワード色タイプ
,カラム6:補完テキスト
,カラム7:キーワード情報クリック時移動先URL
,※カラム1が空の行は無視されます。（＝コメント行として使用出来ます。）
,※カラム5のキーワード色タイプは下記の8種類（モード設定の「色」タブの各色に対応しています。）
,0.""reserved-word"", 1.""method"", 2.""property"", 3.""variable"", 4.""class""
,5.""macro"", 6.""other1"", 7.""other2""
,＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
,文法定義スクリプト用キーワード
,
,＝＝＝＝＝＝＝＝＝＝カラムヘッダ＝＝＝＝＝＝＝＝＝＝
,キーワード説明,型名,親キーワード,キーワード色タイプ,補完テキスト,移動先URL
,＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
state,,,,reserved-word
category,,,,reserved-word
start,"start
この状態に遷移したとき、必ず最初に一回だけ一致します。",,
lineend,"lineend
行末に一致します。",,,reserved-word
default,"default
他の一致文字列すべてに一致しなかった場合に、実行されます。",,
regexp,"regexp\"\"",,,reserved-word
heredocumentend,"heredocumentend
heredocumentidという名前の変数に入っている文字列に一致します。",,,reserved-word
,＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
GlobalAttribute_SDFName,"GlobalAttribute_SDFName(""名前"")
文法スクリプトの名前を記述します。モード設定の「文法」タブでのメニュー表示に表示されます。文法認識の動作には影響しません。
名前はダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_SDFVersion,"GlobalAttribute_SDFVersion(""バージョン"")
文法スクリプトの対応バージョンを記述します。
現状、文法認識の動作には影響しません。""3.0""を記述して下さい。",,,property
GlobalAttribute_SyntaxPart,"GlobalAttribute_SyntaxPart(""文法パート名"",""文法パートグループ名"",初期状態名, ""単語の最初になりうる文字"",""単語の途中の一文字になりうる文字"",""必ず単語の最後になる文字"" [, ""対応文字列1（開始文字列）"",""対応文字列1（終了文字列）, ""対応文字列2（開始文字列）"",""対応文字列2（終了文字列）,...])
文法パートを設定します。
文法パート名には、文法パート名を記述します。 この文法パート名は、StateAttribute_SyntaxPart()の引数に使用します。
文法パートグループ名には、文法パートのグループ名を指定します。
文法パートグループ名が変化する行では、テキスト画面上に文法パート分割線が表示されます。
また、ツールフォルダに文法パートグループ名に一致するフォルダがあれば、そのフォルダが ツール→ツール入力モードの開始フォルダとなります。
初期状態名には、この文法パートの初期状態を記述します。
単語の最初になりうる文字、単語の途中の一文字になりうる文字、必ず単語の最後になる文字には、 それぞれ単語を構成する文字を設定します。
対応文字列（開始文字列）、対応文字列（終了文字列）には、 対応文字列機能（[検索→対応文字列入力」）で使用する対応文字列を設定します。対応文字列の部分は省略可能です。",,,property
GlobalAttribute_InitialState,"GlobalAttribute_InitialState(""拡張子"", 状態名)
拡張子に一致するファイルを開いたとき、初期状態を状態名で指定した状態に設定します。
指定した拡張子に一致しない場合は、初期状態はidleになります。
拡張子はダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_StartAlphabet,"GlobalAttribute_StartAlphabet(""文字列"")
トークン（単語）の最初の一文字になりうる文字を指定します。
ダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_ContinuousAlphabet,"GlobalAttribute_ContinuousAlphabet(""文字列"")
トークン（単語）の途中の一文字になりうる文字を指定します。
ダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_ImportRecursive,"GlobalAttribute_ImportRecursive(""拡張子"")
拡張子で指定した拡張子を持つファイルをインポートしたとき、
そのファイル内で指定されたインポートファイルも再帰的にインポートします。",,,property
GlobalAttribute_ImportRecursiveAll,"GlobalAttribute_ImportRecursiveAll
ファイルをインポートしたとき、常に、 そのファイル内で指定されたインポートファイルも再帰的にインポートします。",,,property
GlobalAttribute_IdInfoAutoDisplay,"GlobalAttribute_IdInfoAutoDisplay(""文字列"")
文字列で指定した文字を入力したとき、 識別子情報ウインドウに、その直前の識別子の情報を表示します。",,,property
GlobalAttribute_IdInfoArgStart,"GlobalAttribute_IdInfoArgStart(""文字列"")
識別子情報内の引数部分の開始文字列を、文字列で指定します。
ダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_IdInfoArgEnd,"GlobalAttribute_IdInfoArgEnd(""文字列"")
識別子情報内の引数部分の終了文字列を、文字列で指定します。
ダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_IdInfoArgDelimiter,"GlobalAttribute_IdInfoArgDelimiter(""文字列"")
識別子情報内の引数部分の引数区切り文字を、文字列で指定します。
ダブルクオーテーションで囲って記述します。",,,property
GlobalAttribute_ClassString,"GlobalAttribute_ClassString(""文字列1"",""文字列2"",...,""文字列n"")
クラス指定するための文字列を指定します。
テキスト内でこの文字の直後で補完入力（省略入力）したとき、その前の単語を親とする識別子だけを候補表示します。
ダブルクオーテーションで囲って記述します。ダブルクオーテーションで囲った文字列をカンマで区切って複数入力可能です。",,,property
GlobalAttribute_InstanceString,"GlobalAttribute_InstanceString(""文字列1"",""文字列2"",...,""文字列n"")
クラス（インスタンス）指定するための文字列を指定します。
テキスト内でこの文字の直後で補完入力（省略入力）したとき、その前の単語の型名を親とする識別子だけを候補表示します。
ダブルクオーテーションで囲って記述します。ダブルクオーテーションで囲った文字列をカンマで区切って複数入力可能です。",,,property
GlobalAttribute_ImportLinkToProjectAll,"GlobalAttribute_ImportLinkToProjectAll
プロジェクト内の全てのファイルをインポートします。",,,property
GlobalAttribute_Directive,"GlobalAttribute_Directive(""文字列1"",""文字列2"",...,""文字列n"")
ディレクティブ部分の開始文字列を設定します。",,,property
GlobalAttribute_DirectiveIf,"GlobalAttribute_DirectiveIf(""文字列1"",""文字列2"",...,""文字列n"")
C言語ディレクティブのifに対応する文字列を設定します。",,,property
GlobalAttribute_DirectiveIfdef,"GlobalAttribute_DirectiveIfdef(""文字列1"",""文字列2"",...,""文字列n"")
C言語ディレクティブのifdefに対応する文字列を設定します。",,,property
GlobalAttribute_DirectiveIfndef,"GlobalAttribute_DirectiveIfndef(""文字列1"",""文字列2"",...,""文字列n"")
C言語ディレクティブのifndefに対応する文字列を設定します。",,,property
GlobalAttribute_DirectiveElse,"GlobalAttribute_DirectiveElse(""文字列1"",""文字列2"",...,""文字列n"")
C言語ディレクティブのelseに対応する文字列を設定します。",,,property
GlobalAttribute_DirectiveElif,"GlobalAttribute_DirectiveElif(""文字列1"",""文字列2"",...,""文字列n"")
C言語ディレクティブのelifに対応する文字列を設定します。",,,property
GlobalAttribute_DirectiveEndif,"GlobalAttribute_DirectiveEndif(""文字列1"",""文字列2"",...,""文字列n"")
C言語ディレクティブのendifに対応する文字列を設定します。",,,property
,＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
StateAttribute_ColorSlot,"StateAttribute_ColorSlot(色タイプ番号)
この状態のテキストを、色タイプ番号で指定した色で色付けします。",,,property
StateAttribute_SyntaxPart,"StateAttribute_SyntaxPart(""文法パート名"")
この状態の文法パートを指定します。",,,property
StateAttribute_IgnoreCase,"StateAttribute_IgnoreCase
状態遷移部の一致文字列との比較において、大文字小文字を無視します。",,,property
StateAttribute_Stable,"StateAttribute_Stable
安定状態であることを指定します。テキスト編集時、このパラメータが設定された状態まで戻って文法認識を再度行います。",,,property
StateAttribute_Comment,"StateAttribute_Comment
この状態がコメント状態であることを指定します。",,,property
StateAttribute_NotCode,"StateAttribute_NotCode
この状態が本文外であることを指定します。
この部分は括弧の対応チェック機能等の対象外になります。",,,property
StateAttribute_DisableAllCategory,"StateAttribute_DisableAllCategory
この状態ではすべてのカテゴリの色づけを無効にします。",,,property
StateAttribute_IndentOnTheWay,"StateAttribute_IndentOnTheWay
行の最初がこの状態だったときは、インデント時、「文の途中（複文）の行」のインデントが適用されます。",,,property
StateAttribute_NoSpellCheck,"StateAttribute_NoSpellCheck
この状態ではスペルチェックを行いません。",,,property
StateAttribute_DisableDirective,"StateAttribute_DisableDirective
この状態ではディレクティブ文字列の認識を行いません。",,,property
StateAttribute_AfterParentKeyword,"StateAttribute_AfterParentKeyword
この状態では、常に直前の単語、または、直前の単語の型名を親キーワードとして補完候補表示を行います。
Objective-Cでのメソッドコールのように、クラス名とメソッドの間に半角スペースしかないような状態で使用します。",,,property
StateAttribute_EnableRecompletion,"StateAttribute_EnableRecompletion
この状態では、キーワードをクリック時、同じ親キーワードを持つキーワードを補完候補として表示します。",,,property
StateAttribute_DisableIndent,"StateAttribute_DisableIndent
この状態では、常に自動インデントを無効にします。",,,property
,＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
ChangeState,"ChangeState(状態名)
状態名で指定した状態へ遷移します。",,,method
ChangeStateFromNextChar,"ChangeStateFromNextChar(状態名)
状態名で指定した状態へ遷移します。（ChangeStateと同じ）",,,method
BlockStart,"BlockStart(ブロック名)
ブロック名で指定したブロックを開始します。
次のChangeStateIfBlockEndと組み合わせて使います。",,,method
ChangeStateIfBlockEnd,"ChangeStateIfBlockEnd(ブロック名,状態名)
ブロック名で指定した位置で始まるブロックが終了していたら、 状態名で指定した状態へ遷移します。",,,method
ChangeStateIfNotAfterAlphabet,"ChangeStateIfNotAfterAlphabet(状態名)
直前の文字がアルファベット以外なら、 状態名で指定した状態へ遷移します。",,,method
ChangeStateIfTokenEqualVar,"ChangeStateIfTokenEqualVar(変数名,状態名)
現在のトークンが変数名で指定した変数と同じなら、 状態名で指定した状態へ遷移します。",,,method
PushState,"PushState(状態名)
現在の状態を保存して、状態名で指定した状態へ遷移します。
保存できる状態は1段階のみです。",,,method
PushStateFromNextLine,"PushStateFromNextLine
次の行の最初で、現在の状態を保存して、状態名で指定した状態へ遷移します。
保存できる状態は1段階のみです。",,,method
PushStateIfNotAfterAlphabet,"PushStateIfNotAfterAlphabet(状態名)
直前の文字がアルファベット以外なら、
現在の状態を保存して、状態名で指定した状態へ遷移します。
保存できる状態は1段階のみです。",,,method
PopState,"PopState
PushState等で保存された状態へ状態遷移します。",,,method
PopStateFromNextChar,"PopStateFromNextChar
PushState等で保存された状態へ状態遷移します。（PopStateと同じ）",,,method
SetVarStart,"SetVarStart(変数名)
一致文字列の次の文字から、変数名で指定した変数への格納を開始します。",,,method
SetVarStartFromNextChar,"SetVarStartFromNextChar(変数名)
一致文字列の次の文字から、変数名で指定した変数への格納を開始します。（SetVarStart()と同じ）",,,method
SetVarStartAtPrevToken,"SetVarStartAtPrevToken(変数名)
一致文字列の１つ前のトークンから、変数名で指定した変数への格納を開始します。",,,method
SetVarStartOrContinue,"SetVarStartOrContinue(変数名)
一致文字列の次の文字から、変数名で指定した変数への格納を開始します。
前回の開始から連続しているとき（終了していないとき）は、今まで格納した文字列に続けて格納します。",,,method
SetVarWithTokenStack,"SetVarWithTokenStack(変数名,トークン相対位置)
変数名で指定した変数へ、トークン相対位置で指定した位置のトークンを格納します。
トークン相対位置には0以下の整数を指定します。（0が現在位置のトークン）",,,method
SetVarWithTokenStack,"SetVarWithTokenStack(変数名,トークン相対開始位置,トークン相対終了位置)
変数名で指定した変数へ、トークン相対開始位置〜トークン相対終了位置のトークンを格納します。
トークン相対位置には0以下の整数を指定します。（0が現在位置のトークン）",,,method
SetVarEnd,"SetVarEnd(変数名)
一致文字列の直前の文字までで、変数名で指定した変数への格納を終了します。",,,method
SetVarEndAtNextChar,"SetVarEndAtNextChar(変数名)
一致文字列の最後の文字までで、変数名で指定した変数への格納を終了します。",,,method
SetVarEndAtPrevToken,"SetVarEndAtPrevToken(変数名)
一致文字列の直前のトークンまでで、変数名で指定した変数への格納を終了します。",,,method
SetVarLastWord,"SetVarLastWord(変数名)
一致文字列より前で、最後の単語（アルファベットで始まるトークン）を、変数名で指定した変数へ格納します。",,,method
SetVarCurrentToken,"SetVarCurrentToken(変数名)
現在のトークンを変数名で指定した変数へ格納します。",,,method
SetVarNextToken,"SetVarNextToken(変数名)
次のトークンを（先読みして）、変数名で指定した変数へ格納します。",,,method
CatVar,"CatVar(変数名1,変数名2,変数名3)
変数名1へ、変数名2と変数名2をつなげた文字列を格納します。",,,method
SetVar,"SetVar(変数名1,変数名2)
変数名1へ、変数名2の文字列を格納します。",,,method
SetVar,"SetVar(変数名1,""文字列"")
変数名1へ、指定した固定文字列を格納します。",,,method
SetVarTypeOfVar,"SetVarTypeOfVar(変数名)
変数名に格納されているキーワードの型名を取得し、型名を変数に格納します。",,,method
SetVarRegExpGroup1,"SetVarRegExpGroup1(変数名)
一致文字列に正規表現を使用した場合に、正規表現のグループ1に一致した文字列を変数に格納します。",,,method
ClearVar,"ClearVar(変数名)
変数名で指定した変数を空にします。",,,method
ClearTokenStack,"ClearTokenStack
過去のトークンの記録をクリアします。
この後、SetVarWithTokenStack等でクリア済みのトークンを指定したときは、空白文字列となります。",,,method
IncIndentFromNext,"IncIndentFromNext
一致文字列の次の文字から、インデントレベルを+1します。",,,method
DecIndentFromNext,"DecIndentFromNext
一致文字列の次の文字から、インデントレベルを-1します。",,,method
DecIndentFromCurrent,"DecIndentFromCurrent
一致文字列の最初の文字から、インデントレベルを-1します。",,,method
DecIndentOnlyCurrent,"DecIndentOnlyCurrent
現在行のみインデントレベルを-1します。",,,method
SetZeroIndentOnlyCurrent,"SetZeroIndentOnlyCurrent
現在行のみインデント無しにします。",,,method
IndentLabel,"IndentLabel
現在行をラベル行のインデントにします。
（モード設定ウインドウの「インデント」タブを参照）",,,method
AddGlobalId,"AddGlobalId(カテゴリ名,キーワード,メニュー登録文字列, 識別子情報, 識別子コメント, 親識別子名, 識別子型名[, アウトラインレベル])
グローバル識別子（ファイル全体で有効な識別子）を登録します。
カテゴリ名：登録先カテゴリを指定します。カテゴリ名は[ ]で囲って指定します。
キーワード：キーワード名を指定します。キーワードはカテゴリで指定した色で色づけされます。
変数名またはダブルクオーテーションで囲った文字列を記述します。
メニュー登録文字列：見出しメニュー・見出しリストへ登録する文字列を指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
空白文字列（""""）を指定した場合、メニュー登録されません。
識別子情報：識別子情報ウインドウに表示する情報テキストを指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
不要な場合は空白文字列（""""）を指定します。
識別子コメント：識別子情報ウインドウに表示するコメントテキストを指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
不要な場合は空白文字列（""""）を指定します。
親識別子名：親となる識別子名を指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
不要な場合は空白文字列（""""）を指定します。
識別子型名：型名を指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
不要な場合は空白文字列（""""）を指定します。
アウトラインレベル : アウトラインレベル（1〜9）を指定します。省略時は1になります。",,,method
AddLocalId,"AddLocalId(カテゴリ名,キーワード, 識別子情報, 識別子型名, 対象外文字列リスト)
ローカル識別子（ファイル内の一部分で有効な識別子）を登録します。
カテゴリ名：登録先カテゴリを指定します。カテゴリ名は[ ]で囲って指定します。
キーワード：キーワード名を指定します。キーワードはカテゴリで指定した色で色づけされます。
変数名またはダブルクオーテーションで囲った文字列を記述します。
識別子情報：識別子情報ウインドウに表示する情報テキストを指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
不要な場合は空白文字列（""""）を指定します。
識別子型名：型名を指定します。
変数名またはダブルクオーテーションで囲った文字列を記述します。
不要な場合は空白文字列（""""）を指定します。
対象外文字列リスト：キーワード登録しない文字列を指定します。
対象外文字列をカンマで区切って、全体をダブるクオーテーションで囲って指定します。
不要な場合は空白文字列（""""）を指定します。",,,method
Import,"Import(変数名)
変数名で指定したファイルパスのファイルを、インポートファイルとして認識します。
インポートファイル内のグローバル識別子は、インポート先のファイル上でも色づけされます。",,,method
EscapeNextChar,"EscapeNextChar
次の文字をエスケープします。（次の文字は無視される。）",,,method
SyntaxError,"SyntaxError(""エラー文字列"")
行番号エリアにエラーマークを表示します。",,,method
SyntaxWarning,"SyntaxWarning(""ワーニング文字列"")
行番号エリアにワーニングマークを表示します。",,,method
,＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
CategoryAttribute_ColorSlot,"CategoryAttribute_ColorSlot(色タイプ番号)
このカテゴリのキーワードを、色タイプ番号で指定した色で色付けします。",,,method
CategoryAttribute_DisplayName,"CategoryAttribute_DisplayName(言語コード,""表示名"")
キーワード情報ウインドウにおいて表示されるカテゴリ名を指定します。
指定しない場合は、category[]で指定したカテゴリ名がそのまま表示されます。
言語コードはこちらを参照して下さい。",,,method
CategoryAttribute_MenuBold,"CategoryAttribute_MenuBold
このカテゴリを見出しメニュー・見出しリストに登録するとき、ボールドで表示します。",,,method
